[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "plastinka_sales_predictor"
version = "1.0.0"
description = "A machine learning model for predicting sales using advanced metrics"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "click>=8.1.8",
    "PyYAML>=6.0.1",
    "build>=1.2.2.post1",
    "setuptools>=71.0.2,<80.9",
    "wheel>=0.45.1",
    "dill>=0.3.9",
    "darts==0.36.0",
    "passlib[bcrypt]>=1.7.4",
    "bcrypt<4.0.0",
    "toposort>=1.10",
]

[project.scripts]
plastinka-check-env = "deployment.scripts.check_environment:main"

[project.optional-dependencies]
ml = [
    "configspace==0.7.1",
    "hpbandster>=0.7.4",
    "numpy>=1.26.4",
    "pandas>=2.2.3",
    "scikit-learn>=1.6.1",
    "scipy>=1.15.2",
    "tensorboard>=2.19.0",
    "torchmetrics>=1.7.0",
    "onnx>=1.18.0",
    "ray>=2.41.0",
]
notebook = [
    "ipykernel>=6.29.5",
    "ipywidgets>=8.1.5",
]
dev = [
    "backoff>=2.2.1",
    "boto3>=1.38.2",
    "botocore>=1.38.2",
    "fastapi>=0.115.12",
    "httpx>=0.28.1",
    "pyfakefs>=5.8.0",
    "pytest>=8.3.5",
    "pytest-mock>=3.14.0",
    "pytest-asyncio>=0.26.0",
    "pytest-benchmark>=5.1.0",
    "pytest-cov>=6.0.0",
    "ruff>=0.8.0",
    "debugpy>=1.8.15",
    "ipykernel>=6.30.0",
]
deployment = [
    "aiofiles>=24.1.0",
    "fastapi>=0.115.12",
    "uvicorn>=0.34.2",
    "gunicorn>=23.0.0",
    "pydantic-settings>=2.9.1",
    "python-multipart>=0.0.20",
    "httpx>=0.28.1",
    "pandas>=2.2.3",
    "numpy>=1.26.4",
    "openpyxl>=3.1.5",
    "boto3>=1.38.2",
    "botocore>=1.38.2",
    "datasphere>=0.10.0",
    "psutil>=7.0.0",
    "psycopg2-binary>=2.9.10",
    "cryptography>=42.0.0",
    "python-dotenv>=1.1.0",
    "bcrypt>=3.2.2",
]
cpu = [
  "torch>=2.7.0",
]
cu118 = [
  "torch>=2.7.0",
]

[tool.uv]
conflicts = [
  [
    { extra = "cpu" },
    { extra = "cu118" },
  ],
]

[tool.setuptools.packages.find]
where = ["."]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.ruff]
line-length = 88
target-version = "py310"
exclude = [
    ".git",
    "__pycache__",
    ".venv",
    "venv",
    "build",
    "dist",
    "*.egg-info",
]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by formatter
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.uv.sources]
torch = [
  { index = "pytorch-cpu", extra = "cpu" },
  { index = "pytorch-cu118", extra = "cu118" },
]

[[tool.uv.index]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
explicit = true

[[tool.uv.index]]
name = "pytorch-cu118"
url = "https://download.pytorch.org/whl/cu118"
explicit = true

[tool.uv.extra-build-dependencies]
xgboost = [{ requirement = "torch", match-runtime = true }]
